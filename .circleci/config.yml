version: 2.1

checkout:
  post:
    - >
      if [ -n "$CI_PULL_REQUEST" ]; then
        PR_ID=${CI_PULL_REQUEST##*/}
        git fetch origin +refs/pull/$PR_ID/merge:
        git checkout -qf FETCH_HEAD
      fi

attach_workspace: &attach_workspace
  attach_workspace:
    at: /home/circleci/project

executors:
  py36:
    docker:
      - image: circleci/python:3.6
      - image: rabbitmq:3.7.4
  py27:
    docker:
      - image: circleci/python:2.7
      - image: rabbitmq:3.7.4


commands:
  add_local_bin:
    steps:
      - run:
          name: Add .local/bin to PATH
          command: echo 'export PATH="~/.local/bin:$PATH"' >> $BASH_ENV

  install_tox:
    parameters:
      version:
        type: string
        default: "3.13.2"
    steps:
      - run:
          name: Run tox of specfic environment
          command: tox -e $DO_ENV

  - &test_defaults_for_python26
    docker:
        # staying on old debian image, because buster dropped libssl1.0-dev, which
        # is required to compile py2.6 via pyenv
      - image: circleci/python:2.7-stretch
      - image: rabbitmq:3.7.4
    steps:
      - run:
          name: Install and set python version with pyenv
          command: |
                   set -eux
                   git clone https://github.com/yyuu/pyenv.git ~/.pyenv
                   export PYENV_ROOT="$HOME/.pyenv"
                   export PATH="$PYENV_ROOT/bin:$PATH"
                   echo 'export PYENV_ROOT="$HOME/.pyenv"' >> $BASH_ENV
                   echo 'export PATH="$PYENV_ROOT/bin:$PATH"' >> $BASH_ENV
                   sudo apt-get install -y build-essential libssl1.0-dev zlib1g-dev xz-utils
                   echo -e 'if [ $SHLVL = 1 ]; then eval "$(pyenv init -)"; fi' >> $BASH_ENV
                   pyenv install 2.6.9
                   pyenv global 2.6.9

defaults:
  - &docs_defaults
    docker:
      - image: circleci/python:2.7
    steps:
      - checkout
      - run:
          name: Install tox
          command: sudo pip install tox==3.13.2
      - run:
          name: Run tox of specfic environment
          command: tox -e $DO_ENV
      - persist_to_workspace:
              root: /home/circleci/project
              paths: #circleci can only handle fixed paths currently
                - docs

  - &deploy_defaults
    docker:
      - image: circleci/python:2.7
    steps:
      - run:
          name: Install awscli
          command: sudo pip install awscli
      - *attach_workspace
      - run:
          name: Deploy to S3
          command: |
                    aws s3 sync $DOCS_PATH s3://$DOCS_PATH_IN_S3 --delete --acl public-read

jobs:
  flake8_py27:
    docker:
      - image: circleci/python:2.7
    steps:
      - checkout
      - add_local_bin
      - install_tox
      - run: tox -e py27-flake8

  flake8_py36:
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - add_local_bin
      - install_tox
      - run: tox -e py36-flake8

  test_py26:
    executor: py27
    steps:
      - checkout
      - add_local_bin
      - setup_py26
      - install_tox:
          version: "2.9.1"
      - run:
          command: tox --hashseed noset -e py26-dsl_parser
          when: always
      - run:
          command: tox --hashseed noset -e py26-script_plugin
          when: always
      - run:
          command: tox --hashseed noset -e py26-plugins_common
          when: always

  test_py27:
    executor: py27
    steps:
      - checkout
      - add_local_bin
      - install_tox
      - run:
          command: tox --hashseed noset -e py27-dsl_parser
          when: always
      - run:
          command: tox --hashseed noset -e py27-script_plugin
          when: always
      - run:
          command: tox --hashseed noset -e py27-plugins_common
          when: always

  test_py36:
    executor: py36
    steps:
      - checkout
      - add_local_bin
      - install_tox
      - run:
          command: tox --hashseed noset -e py36-dsl_parser
          when: always
      - run:
          command: tox --hashseed noset -e py36-script_plugin
          when: always
      - run:
          command: tox --hashseed noset -e py36-plugins_common
          when: always

  docs_plugins_common:
    <<: *docs_defaults
    environment:
      DO_ENV: docs_plugins_common

  docs_rest_client:
    <<: *docs_defaults
    environment:
      DO_ENV: docs_rest_client

  deploy_docs_plugins_common:
    <<: *deploy_defaults
    environment:
      DOCS_PATH: docs/cloudify_plugins_common/_build/html
      DOCS_PATH_IN_S3: docs.cloudify.co/cloudify-plugins-common/

  deploy_docs_rest_client:
    <<: *deploy_defaults
    environment:
      DOCS_PATH: docs/cloudify_rest_client/_build/html
      DOCS_PATH_IN_S3: docs.cloudify.co/cloudify-rest-client/

workflows:
  version: 2

  build_and_test:
    jobs:
      - flake8_py27
      - flake8_py36
      - test_py26:
          requires:
            - flake8_py27
      - test_py27:
          requires:
            - flake8_py27
      - test_py36:
          requires:
            - flake8_py36
      - docs_plugins_common
      - docs_rest_client
      - deploy_docs_plugins_common:
          requires:
              - docs_plugins_common
          filters:
            branches:
              only: master
      - deploy_docs_rest_client:
          requires:
              - docs_rest_client
          filters:
            branches:
              only: master
